{
  "hash": "211c54427ecc425beb0de99f3cb4c993",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Gráficos para Revista Brasileira de Ciência do Solo\"\nauthor: \n  - name: Gustavo Frosi\n    email: gustavofrosi@hotmail.com\ncode-fold: false\nfreeze: true\ncategories: \n  - R\n  - Solos\n  - RBCS\n  - ggplot2\ntoc: true\nimage: th.png\ndescription: \"Criando um snippet para o padrão gráfico da Revista Brasileira de Ciência do Solo\"\nimage-alt: \"\"\ndate: \"2025/08/31\"\nlang: pt\neditor_options: \n  chunk_output_type: console\n---\n\n# Alguns padrões\n\nA *Revista Brasileira de Ciência do Solo* preza por um padrão gráfico nos artigos publicados. Para isso, há um guia com todas as exigências que os autores devem atender para manter a identidade visual. Este texto é um guia de como realizar essas alterações utilizando gráficos e figuras desenvolvidos com a linguagem R.\n\n## A fonte\n\n**DejaVu** é a família da fonte **DejaVu Sans Condensed**, a qual deve ser utilizada na criação das figuras. A família de fontes **DejaVu** está em domínio público, podendo ser baixada e até modificada por qualquer pessoa. Isso é uma vantagem, pois seu download pode ser feito de forma rápida e simples. Uma das alternativas é obtê-la no site [fonts2u](https://pt.fonts2u.com/dejavu-sans-condensed.fonte).\n\nA @tbl-comp mostra o mesmo texto escrito com as fontes Arial e DejaVu, permitindo observar as principais diferenças entre elas.\n\n\n::: {#tbl-comp .cell tbl-cap='Comparação das fontes Arial e DejaVu'}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(gt)\n\ntexto <- data.frame(Arial = \"A ciência do solo é o estudo do solo da Terra e de outros planetas, usando teorias e conhecimentos em evolução para entender seu papel na sustentação do funcionamento do ecossistema, enfrentando desafios ambientais e apoiando a humanidade.\",\n                    DejaVu = \"A ciência do solo é o estudo do solo da Terra e de outros planetas, usando teorias e conhecimentos em evolução para entender seu papel na sustentação do funcionamento do ecossistema, enfrentando desafios ambientais e apoiando a humanidade.\")\n\ntexto |> \n  gt() |> \n  # tab_header(\n  #   # title = md(\"**Diferenças entre Arial e DejaVu**\")\n  # ) |> \n  tab_source_note(\n    source_note = md(\"Fonte: https://doi.org/10.1016/j.soisec.2025.100176\")\n  ) |> \n   tab_style(\n    style = cell_text(font = \"Arial\"),\n    locations = cells_body(columns = Arial)\n  ) |>\n  tab_style(\n    style = cell_text(font = \"DejaVu Sans\"),\n    locations = cells_body(columns = DejaVu)\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"cnqajkhrkq\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#cnqajkhrkq table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#cnqajkhrkq thead, #cnqajkhrkq tbody, #cnqajkhrkq tfoot, #cnqajkhrkq tr, #cnqajkhrkq td, #cnqajkhrkq th {\n  border-style: none;\n}\n\n#cnqajkhrkq p {\n  margin: 0;\n  padding: 0;\n}\n\n#cnqajkhrkq .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#cnqajkhrkq .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#cnqajkhrkq .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#cnqajkhrkq .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#cnqajkhrkq .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#cnqajkhrkq .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#cnqajkhrkq .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#cnqajkhrkq .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#cnqajkhrkq .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#cnqajkhrkq .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#cnqajkhrkq .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#cnqajkhrkq .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#cnqajkhrkq .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#cnqajkhrkq .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#cnqajkhrkq .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cnqajkhrkq .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#cnqajkhrkq .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#cnqajkhrkq .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#cnqajkhrkq .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cnqajkhrkq .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#cnqajkhrkq .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cnqajkhrkq .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#cnqajkhrkq .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cnqajkhrkq .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#cnqajkhrkq .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cnqajkhrkq .gt_left {\n  text-align: left;\n}\n\n#cnqajkhrkq .gt_center {\n  text-align: center;\n}\n\n#cnqajkhrkq .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#cnqajkhrkq .gt_font_normal {\n  font-weight: normal;\n}\n\n#cnqajkhrkq .gt_font_bold {\n  font-weight: bold;\n}\n\n#cnqajkhrkq .gt_font_italic {\n  font-style: italic;\n}\n\n#cnqajkhrkq .gt_super {\n  font-size: 65%;\n}\n\n#cnqajkhrkq .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#cnqajkhrkq .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#cnqajkhrkq .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#cnqajkhrkq .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#cnqajkhrkq .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#cnqajkhrkq .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#cnqajkhrkq .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#cnqajkhrkq .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#cnqajkhrkq div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Arial\">Arial</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"DejaVu\">DejaVu</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Arial\" class=\"gt_row gt_left\" style=\"font-family: Arial;\">A ciência do solo é o estudo do solo da Terra e de outros planetas, usando teorias e conhecimentos em evolução para entender seu papel na sustentação do funcionamento do ecossistema, enfrentando desafios ambientais e apoiando a humanidade.</td>\n<td headers=\"DejaVu\" class=\"gt_row gt_left\" style=\"font-family: 'DejaVu Sans';\">A ciência do solo é o estudo do solo da Terra e de outros planetas, usando teorias e conhecimentos em evolução para entender seu papel na sustentação do funcionamento do ecossistema, enfrentando desafios ambientais e apoiando a humanidade.</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"2\"><span data-qmd-base64=\"Rm9udGU6IGh0dHBzOi8vZG9pLm9yZy8xMC4xMDE2L2ouc29pc2VjLjIwMjUuMTAwMTc2\"><span class='gt_from_md'>Fonte: <a href=\"https://doi.org/10.1016/j.soisec.2025.100176\">https://doi.org/10.1016/j.soisec.2025.100176</a></span></span></td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n## As cores \n\nA *RBCS* possui uma paleta própria com 9 cores disponíveis para os gráficos. Na @fig-paleta são apresentadas as cores e seus respectivos códigos hexadecimais.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\n\n# vetor de cores\ncores <- c(\n  \"#9e2943\",\n  \"#0a6c69\",\n  \"#75a741\",\n  \"#d18525\",\n  \"#d86c67\",\n  \"#5ab5b2\",\n  \"#b1d369\",\n  \"#711011\",\n  \"#033a39\"\n)\n\n# cria um data frame com posição e cores\ndf <- data.frame(\n  x = seq_along(cores),\n  y = 1,\n  cor = cores\n)\n\n# plota quadrados\nggplot(df, aes(x = x, y = y, fill = cor)) +\n  geom_tile(color = \"white\", width = 0.9, height = 0.9) +\n  geom_text(aes(label = cores), col = \"white\", size = 3, fontface = \"bold\") +\n  scale_fill_identity() +\n  coord_fixed() +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![Paleta de cores da RBCS](index_files/figure-html/fig-paleta-1.png){#fig-paleta width=672}\n:::\n:::\n\n\n\n# Reproduzindo o padrão RBCS no R \n\nPara implementar essas configurações, serão utilizados os seguintes pacotes do R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \nlibrary(systemfonts)\nlibrary(extrafont)\nlibrary(patchwork)\n```\n:::\n\n\n## Verificando a fonte\n\nApós baixar e instalar a fonte, é necessário torná-la disponível para uso no R. Isso é feito carregando as fontes do sistema com a função abaixo:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# importar fontes\nfont_import()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nImporting fonts may take a few minutes, depending on the number of fonts and the speed of the system.\nContinue? [y/n] \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nExiting.\n```\n\n\n:::\n:::\n\n\n::: {.callout-note}\n\nA função `font_import()` é utilizada apenas um vez, após a instalação da fonte no computador.\n\n:::\n\nApós o carregamento, pode ser realizado o registro de fontes que ainda não foram registradas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# registrar fontes\nloadfonts(device = \"win\")\n```\n:::\n\n\nAgora, as fontes podem ser carregadas, e uma estrutura condicional pode ser feita para verificar se entre as fontes disponíveis está a **DejaVu**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fontes detectadas no sistema\nfonts <- system_fonts()\n\n# estrutura lógica de seleção\nif (any(fonts == \"DejaVuSansCondensed\")) {\n  print(\"Fonte instalada!!\")\n}else{\n  print(\"Fonte não encontrada!!\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Fonte instalada!!\"\n```\n\n\n:::\n:::\n\n\n\n## Cores\n\nPara utilizar as cores, basta criar um vetor com os códigos hexadecimais (@fig-paleta).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncores <- c(\n  \"#9e2943\",\n  \"#0a6c69\",\n  \"#75a741\",\n  \"#d18525\",\n  \"#d86c67\",\n  \"#5ab5b2\",\n  \"#b1d369\",\n  \"#711011\",\n  \"#033a39\"\n)\n```\n:::\n\n\n## Exemplo de uso\n\nA seguir, apresento um exemplo de como tudo isso pode ser adicionado de forma simples aos gráficos.\n\nPara ilustrar, criei dados fictícios de um experimento comum de dose e resposta. Neste exemplo, considero 9 tratamentos, com 10 repetições, 5 doses e uma variável chamada resposta. Os valores não possuem significado real, servindo apenas como exemplo.\n\n\n::: {.cell}\n\n:::\n\n\n## Visualização\n\nPara aplicar a fonte a todo o texto do gráfico, basta definir o nome da fonte na configuração de temas do {ggplot2}.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_minimal(base_family = \"Dejavu Sans\")\n```\n:::\n\n\nCaso, o tema utilizado seja o \"base\", utilize:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme(text = element_text(family = \"Dejavu Sans\"))\n```\n:::\n\n\nJá as cores podem ser adicionadas por meio de uma escala manual, passando o vetor como parâmetro de `values` na função `scale_color_manual()`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"true\"}\nggplot(df) + \n  aes(x = tratamento, y = resposta, col = as.factor(dose)) +\n  stat_summary(\n    geom = \"errorbar\",\n    position = position_dodge(.5)\n  ) +\n  stat_summary(\n    geom = \"point\",\n    position = position_dodge(.5),\n    size = 2\n  ) +\n  scale_color_manual(values = cores)\n```\n:::\n\n\nAlém disso, a RBCS solicita que os gráficos sejam enviados em formato vetorial, como SVG. Para salvar um gráfico do {ggplot2} nesse formato, basta utilizar a função `ggsave()`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"true\"}\nggsave(filename = \"fig_ex.svg\", \n       width = 10, \n       height = 8, \n       units = \"cm\", \n       dpi = 950)\n```\n:::\n\n\n\nAbaixo, reúno os dados apresentados em três gráficos distintos, já utilizando as configurações da *RBCS*.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# ponto com barra de erro\np1 <- ggplot(df) +\n  aes(x = tratamento, y = resposta, col = as.factor(dose)) +\n  stat_summary(\n    geom = \"errorbar\",\n    position = position_dodge(.5)\n  ) +\n  stat_summary(\n    geom = \"point\",\n    position = position_dodge(.5),\n    size = 2\n  ) +\n  scale_color_manual(values = cores) +\n  labs(\n    x = \"Tratamento\",\n    y = \"Resposta\",\n    col = \"Dose\",\n    title = \"Gráfico de pontos de exemplo\"\n  ) +\n  theme_bw(base_size = 10, base_family = \"Dejavu Sans\")\n\n# colunas\np2 <- ggplot(df) +\n  aes(x = dose, y = resposta, fill = as.factor(tratamento)) +\n  stat_summary(\n    geom = \"col\",\n    position = position_dodge()\n  ) +\n  scale_fill_manual(values = cores) +\n  labs(\n    x = \"Dose\",\n    y = \"Resposta\",\n    fill = \"Tratamento\",\n    title = \"Gráfico de barras de exemplo\"\n  ) +\n  theme_bw(base_size = 10, base_family = \"Dejavu Sans\")\n\n# linhas\np3 <- ggplot(df) +\n  aes(x = dose, y = resposta, col = as.factor(tratamento)) +\n  stat_summary(geom = \"line\", linewidth = 1) +\n  scale_color_manual(values = cores) +\n  labs(\n    x = \"Dose\",\n    y = \"Resposta\",\n    col = \"Tratamento\",\n    title = \"Gráfico de linhas de exemplo\"\n  ) +\n  theme_bw(base_size = 10, base_family = \"Dejavu Sans\")\n\npt1 <- (p1 | p2) + plot_layout(widths = c(.55, .45))\n\nptt <- pt1 / p3\n\n# ggsave(filename = \"exemplo_gra.png\",\n#        width = 10,\n#        height = 8,\n#        dpi = 1200)\n```\n:::\n\n\n![](ima/exemplo_gra.png)\n\n# Criando um snippet\n\nOs snippets são blocos de código que podem ser chamados rapidamente no corpo do script, utilizando palavras-chave. Exemplos são `if`, `for` e `fun`. Ao digitar essas palavras no RStudio, o autocomplete sugere o snippet que insere automaticamente a estrutura completa da função, otimizando o tempo.\n\n![Exemplo de uso de snippet](ima/2025-08-09 16-56-27.mkv)\n\n## Snippet rbcs\n\nO vídeo abaixo mostra o processo de criação de um snippet baseado no código acima, como chamá-lo no script e, assim, automatizar as configurações de gráficos para a *RBCS*.\n\n![Exemplo de snippet RBCS](ima/snippet_rbcs.mkv)\n\nAgora, sempre que for necessário formatar gráficos de acordo com o padrão da *RBCS*, basta escrever `rbcs` e pressionar enter no RStudio: as configurações básicas já serão inseridas no código.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}